<h1><%= file.title %></h1>
<h3><%= file.header %></h3>
<p>Owned by: <%= file.owner.displayName %></p>

<textarea id="file-body" rows="10" cols="80"><%= file.body %></textarea>
<p id="status" style="color: gray;"></p>
<div id="users" style="margin-top: 20px;">
  <strong>Live Users:</strong>
  <ul id="user-list"></ul>
</div>

<!-- Socket.IO -->
<script src="/socket.io/socket.io.js"></script>
<script>
  const textarea = document.getElementById('file-body');
const status = document.getElementById('status');
const socket = io();
const fileId = "<%= file._id %>";
const userName = "<%= user?.displayName || 'Guest' %>"; // fallback for anonymous

// Join file room with name
socket.emit('join-file', { fileId, userName });

// Update user list UI
socket.on('users-update', (names) => {
  const list = document.getElementById('user-list');
  list.innerHTML = '';
  names.forEach(name => {
    const li = document.createElement('li');
    li.textContent = name;
    list.appendChild(li);
  });
});


  // Emit changes on input
  textarea.addEventListener('input', () => {
    const newBody = textarea.value;
    socket.emit('edit-body', { fileId, newBody });
  });


  // Save to DB on blur
  textarea.addEventListener('blur', () => {
    const updatedBody = textarea.value;

    fetch(`/file/${fileId}/edit`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ body: updatedBody })
    })
    .then(res => {
      if (res.ok) {
        status.textContent = 'Saved!';
        setTimeout(() => status.textContent = '', 1000);
      } else {
        status.textContent = 'Error saving.';
      }
    })
    .catch(err => {
      console.error(err);
      status.textContent = 'Save failed.';
    });
  });
</script>
